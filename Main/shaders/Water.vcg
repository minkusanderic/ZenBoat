
void main( float4 in a_Position  : POSITION,
		   float4 out v_Position : POSITION,
		   float4 out v_Color : COLOR0,
		   uniform float4x4 WorldViewProj,
		   uniform float time
           )
{
	
	float pi = 3.145f;
	
	#define num_of_waves 3
	float4 waves[num_of_waves];
	
	//float wavelength = 100.0f;
	//float amplitude = 10.0f;
	//float speed = 20.0f;
	//float angle = 0.0f;
	waves[0][0] = 200.0f;
	waves[0][1] = 1.0f;
	waves[0][2] = 20.0f;
	waves[0][3] = 0.0f;
	
	waves[1][0] = 80.0f;
	waves[1][1] = 1.0f;
	waves[1][2] = 30.0f;
	waves[1][3] = .8f;
	
	waves[2][0] = 120.0f;
	waves[2][1] = 1.0f;
	waves[2][2] = 15.0f;
	waves[2][3] = 3*pi/2 ;
	
	float total_amp = 0.0f;
	
	for(int i = 0; i < num_of_waves; i++)
	{
	float wavelength = waves[i][0];
	float amplitude = waves[i][1];
	float speed = waves[i][2];
	float angle = waves[i][3];
	
	
	float frequency = 2*pi/wavelength;
    float phase = speed * frequency;
    float theta = dot(float2(-cos(angle),-sin(angle)), float2(a_Position.x, a_Position.y));
    a_Position.z += amplitude * sin(theta * frequency + time * phase);
    total_amp += amplitude;
    }
	//a_Position.z = sin(a_Position.y + time);
	v_Color = float4(0,0,.5+(a_Position.z +total_amp/2)/(2*total_amp),1);
	v_Color.z = v_Color.z * v_Color.z;
	v_Position = mul( a_Position, WorldViewProj ); 
	
}
