uniform sampler2D s_Texture : TEXUNIT0;
uniform sampler2D n_Texture : TEXUNIT1;
uniform sampler2D flow_Texture : TEXUNIT2;

uniform float time;

void main( 
		   	float2 in v_TexCoord  : TEXCOORD0,	
			float3 in v_Normal	: TEXCOORD1,		
			float3 in v_Eye : TEXCOORD2,
			
			float3 in v_Position_Tex : TEXCOORD3,
		   	
			float4 out Color	: COLOR	
			)
{	
	float2 swirl = tex2D(flow_Texture, float2(1.0f,1.0f) - v_TexCoord).xy * 2.0f - 1.0f;
	
	float2 sampleNorm1 = v_TexCoord.xy + swirl * time;
	float2 sampleNorm2 = v_TexCoord.xy + swirl * fmod(time + .5f, 1.0f);
	sampleNorm1.x = fmod(sampleNorm1.x, 1.0f);
	sampleNorm1.y = fmod(sampleNorm1.y, 1.0f);
	sampleNorm2.x = fmod(sampleNorm2.x, 1.0f);
	sampleNorm2.y = fmod(sampleNorm2.y, 1.0f);
	
	
	float3 normColor1 = tex2D( n_Texture, sampleNorm1).xyz;
	float3 normColor2 = tex2D( n_Texture, sampleNorm2).xyz;
	
	float3 lerpNorm = lerp(normColor1, normColor2, (abs(.5f - time)/.5f));
	
	float3 finalNorm = normalize(v_Normal + lerpNorm);
	float4 tmpColor = tex2D( s_Texture,v_TexCoord + finalNorm.xy);
	tmpColor.w = .7f;
	Color = tmpColor;
	
	Color.xyz = floor( 10 * (pow(Color.xyz, 1+length(swirl.xy))))* .1;
	
	Color.xyz += v_Position_Tex.z * .05;
	
}